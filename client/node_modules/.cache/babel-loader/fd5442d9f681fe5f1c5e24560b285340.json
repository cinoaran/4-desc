{"ast":null,"code":"import axios from 'axios';\nimport { returnErrors } from './errorActions';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS } from './types/constTypes'; // Logout User\n\nexport var logout = function logout(dispatch) {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n}; // Login User\n\nexport var login = function login(_ref) {\n  var mail = _ref.mail,\n      password = _ref.password;\n  return function (dispatch) {\n    // Headers\n    var config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    var body = JSON.stringify({\n      mail: mail,\n      password: password\n    });\n    axios.post('/api/auth/management', body, config).then(function (res) {\n      return dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n  };\n}; // Setup config/headers and token\n\nexport var tokenConfig = function tokenConfig(getState) {\n  // Get token from LocalStorage to send it along axios getState().auth.user.token\n  var token = getState().auth.user; // Headers     \n\n  var config = {\n    headers: {\n      \"Content-type\": 'application/json'\n    } // Check for token and add it to headers\n\n  };\n\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n};","map":{"version":3,"sources":["/home/dci/Desktop/4-Desc/client/src/actions/authActions.js"],"names":["axios","returnErrors","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","logout","dispatch","type","login","mail","password","config","headers","body","JSON","stringify","post","then","res","payload","data","catch","err","console","log","response","status","tokenConfig","getState","token","auth","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,YAAV,QAA8B,gBAA9B;AACA,SACIC,aADJ,EAEIC,UAFJ,EAGIC,cAHJ,QAIO,oBAJP,C,CAMA;;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAc;AAEhC,SAAM;AACFC,IAAAA,IAAI,EAAEH;AADJ,GAAN;AAGH,CALM,C,CAOP;;AAEA,OAAO,IAAMI,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,QAAT,QAASA,QAAT;AAAA,SAAwB,UAAAJ,QAAQ,EAAG;AAEpD;AAEA,QAAMK,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAgB;AAAEN,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,QAAQ,EAARA;AAAR,KAAhB,CAAb;AAEAV,IAAAA,KAAK,CACAgB,IADL,CACU,sBADV,EACkCH,IADlC,EACwCF,MADxC,EAEKM,IAFL,CAEU,UAAAC,GAAG;AAAA,aACLZ,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,aADD;AAELiB,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,OAAD,CADH;AAAA,KAFb,EAOKC,KAPL,CAOY,UAAAC,GAAG,EAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAhB,MAAAA,QAAQ,CAACL,YAAY,CAACqB,GAAG,CAACG,QAAJ,CAAaL,IAAd,EAAoBE,GAAG,CAACG,QAAJ,CAAaC,MAAjC,EAAyC,YAAzC,CAAb,CAAR;AACApB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ;AADD,OAAD,CAAR;AAIH,KAdL;AAeH,GA3BoB;AAAA,CAAd,C,CA6BN;;AAID,OAAO,IAAMwB,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAEjC;AACA,MAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,IAA9B,CAHiC,CAKjC;;AACA,MAAMpB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KADE,CAMf;;AANe,GAAf;;AAQA,MAAGiB,KAAH,EAAU;AACNlB,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCiB,KAAjC;AACH;AACR,CAjBM","sourcesContent":["import axios from 'axios';\nimport  { returnErrors } from './errorActions';\nimport {     \n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS\n} from './types/constTypes';      \n\n// Logout User\n\nexport const logout = (dispatch) => {\n    \n    return{\n        type: LOGOUT_SUCCESS\n    }\n}\n\n// Login User\n\nexport const login = ({ mail, password }) => dispatch =>{\n\n    // Headers\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify( { mail, password });\n\n    axios\n        .post('/api/auth/management', body, config)\n        .then(res => \n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n        }))\n        .catch (err => {\n            console.log(err)\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n            dispatch({\n                type: LOGIN_FAIL                \n            });\n\n        })\n}\n\n // Setup config/headers and token\n\n\n\nexport const tokenConfig = (getState) => {\n  \n        // Get token from LocalStorage to send it along axios getState().auth.user.token\n        const token = getState().auth.user;\n\n        // Headers     \n        const config = {\n            headers: {\n                \"Content-type\": 'application/json'\n            }\n        }\n    \n        // Check for token and add it to headers\n    \n        if(token) {\n            config.headers['x-auth-token'] = token\n        }\n}\n"]},"metadata":{},"sourceType":"module"}