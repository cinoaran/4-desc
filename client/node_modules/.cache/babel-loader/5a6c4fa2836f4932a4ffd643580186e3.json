{"ast":null,"code":"import _classCallCheck from \"/home/dci/Desktop/4-Desc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dci/Desktop/4-Desc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dci/Desktop/4-Desc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dci/Desktop/4-Desc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dci/Desktop/4-Desc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dci/Desktop/4-Desc/client/src/components/HOCs/authGuard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nexport default (function (OriginalComponent) {\n  var MixedComponent =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(MixedComponent, _Component);\n\n    function MixedComponent() {\n      _classCallCheck(this, MixedComponent);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(MixedComponent).apply(this, arguments));\n    }\n\n    _createClass(MixedComponent, [{\n      key: \"checkAuth\",\n      value: function checkAuth() {\n        if (!this.props.isAuth && !this.props.jwtToken) {\n          this.props.history.push('/');\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        // Whether user is authed\n        this.checkAuth();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        this.checkAuth();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(OriginalComponent, Object.assign({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      }\n    }]);\n\n    return MixedComponent;\n  }(Component);\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      isAuth: state.auth.isAuthenticated,\n      jwtToken: state.auth.token\n    };\n  };\n\n  return connect(mapStateToProps, null)(MixedComponent);\n});","map":{"version":3,"sources":["/home/dci/Desktop/4-Desc/client/src/components/HOCs/authGuard.js"],"names":["React","Component","connect","OriginalComponent","MixedComponent","props","isAuth","jwtToken","history","push","checkAuth","mapStateToProps","state","auth","isAuthenticated","token"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,gBAAe,UAACC,iBAAD,EAAuB;AAAA,MAExBC,cAFwB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,kCAId;AACR,YAAG,CAAC,KAAKC,KAAL,CAAWC,MAAZ,IAAsB,CAAC,KAAKD,KAAL,CAAWE,QAArC,EAA8C;AAC1C,eAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACJ;AARyB;AAAA;AAAA,0CAUN;AACf;AACA,aAAKC,SAAL;AACJ;AAbyB;AAAA;AAAA,2CAeL;AACjB,aAAKA,SAAL;AACH;AAjByB;AAAA;AAAA,+BAoBjB;AACL,eAAO,oBAAC,iBAAD,oBAAuB,KAAKL,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH;AAtByB;;AAAA;AAAA,IAEDJ,SAFC;;AAyB9B,MAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAS;AAC7B,WAAO;AAELN,MAAAA,MAAM,EAAEM,KAAK,CAACC,IAAN,CAAWC,eAFd;AAGLP,MAAAA,QAAQ,EAAEK,KAAK,CAACC,IAAN,CAAWE;AAHhB,KAAP;AAMD,GAPH;;AASA,SAAOb,OAAO,CAACS,eAAD,EAAiB,IAAjB,CAAP,CAA8BP,cAA9B,CAAP;AACP,CAnCD","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default (OriginalComponent) => {\n\n        class MixedComponent extends Component {\n\n            checkAuth() {\n                if(!this.props.isAuth && !this.props.jwtToken){\n                    this.props.history.push('/');                    \n                } \n            }\n            \n            componentDidMount() {\n                 // Whether user is authed\n                 this.checkAuth();\n            }\n\n            componentDidUpdate() {\n                this.checkAuth();\n            }\n            \n            \n            render() {\n                return <OriginalComponent {...this.props }/>;\n            }\n        }\n\n        const mapStateToProps = (state)=>{\n            return {\n          \n              isAuth: state.auth.isAuthenticated,\n              jwtToken: state.auth.token\n                          \n            }\n          }\n\n        return connect(mapStateToProps,null)(MixedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}